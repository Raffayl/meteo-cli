const readline = require('readline');
const axios = require('axios');

const API_KEY = '1840c74e8c1419f107e336e09906c447'; // Ta cl√© API
const BASE_URL = 'https://api.openweathermap.org/data/2.5/weather';
const BASE_URL_FORECAST = 'https://api.openweathermap.org/data/2.5/forecast';

const rl = readline.createInterface({
    input: process.stdin,
    output: process.stdout,
});

// Fonction pour la m√©t√©o actuelle
const getWeather = async (city) => {
    try {
        const response = await axios.get(BASE_URL, {
            params: {
                q: city,
                appid: API_KEY,
                units: 'metric',
            },
        });

        const { main, weather, name } = response.data;
        console.log(`\nüåç Ville : ${name}`);
        console.log(`üå°Ô∏è Temp√©rature : ${main.temp}¬∞C`);
        console.log(`‚òÅÔ∏è Condition : ${weather[0].description}`);
    } catch (error) {
        console.error('\n‚ùå Erreur : Impossible de r√©cup√©rer les donn√©es m√©t√©o.');
    }
};

// Fonction pour les pr√©visions m√©t√©o
const getWeatherForecast = async (city) => {
    try {
        const response = await axios.get(BASE_URL_FORECAST, {
            params: {
                q: city,
                appid: API_KEY,
                units: 'metric',
            },
        });

        const forecast = response.data.list;
        console.log(`\nüå§Ô∏è Pr√©visions m√©t√©o pour ${city} :\n`);

        // Affiche une pr√©vision par jour
        forecast.forEach((item, index) => {
            if (index % 8 === 0) {
                console.log(`üìÖ ${item.dt_txt} :`);
                console.log(`   üå°Ô∏è Temp√©rature : ${item.main.temp}¬∞C`);
                console.log(`   ‚òÅÔ∏è Condition : ${item.weather[0].description}\n`);
            }
        });
    } catch (error) {
        console.error('\n‚ùå Erreur : Impossible de r√©cup√©rer les pr√©visions.');
    }
};

// Fonction principale
const startApp = () => {
    console.log('\nüå§Ô∏è Bienvenue dans l\'appli m√©t√©o CLI üå§Ô∏è');
    rl.question('üëâ Entrez le nom d\'une ville : ', async (city) => {
        console.log('\nQue souhaitez-vous faire ?');
        console.log('1Ô∏è‚É£ M√©t√©o actuelle');
        console.log('2Ô∏è‚É£ Pr√©visions sur 5 jours');
        rl.question('üëâ Choisissez une option (1 ou 2) : ', async (option) => {
            if (option === '1') {
                await getWeather(city.trim());
            } else if (option === '2') {
                await getWeatherForecast(city.trim());
            } else {
                console.log('‚ùå Option invalide. Veuillez choisir 1 ou 2.');
            }
            rl.close();
        });
    });
};

// Lancer le programme
startApp();
